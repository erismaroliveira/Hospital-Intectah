// <auto-generated />
using System;
using Hospital.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital.Infra.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210926170738_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:IdentityIncrement", 1)
                .HasAnnotation("SqlServer:IdentitySeed", 1)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hospital.Domain.Entidades.ConsultaMedica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraExame")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("ExameId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Protocolo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExameId");

                    b.HasIndex("PacienteId");

                    b.ToTable("ConsultaMedica");
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int?>("TipoExameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoExameId");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(400)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("CHAR(14)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .HasDatabaseName("IX_PACIENTE_CPF");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.TipoExame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoExame");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Exame de sangue, Jejum 12 horas.",
                            Nome = "Hemograma"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Exame de imagem.",
                            Nome = "Raio X"
                        });
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.ConsultaMedica", b =>
                {
                    b.HasOne("Hospital.Domain.Entidades.Exame", "Exame")
                        .WithMany()
                        .HasForeignKey("ExameId");

                    b.HasOne("Hospital.Domain.Entidades.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Exame");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.Exame", b =>
                {
                    b.HasOne("Hospital.Domain.Entidades.TipoExame", "TipoExame")
                        .WithMany()
                        .HasForeignKey("TipoExameId");

                    b.Navigation("TipoExame");
                });

            modelBuilder.Entity("Hospital.Domain.Entidades.Paciente", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
